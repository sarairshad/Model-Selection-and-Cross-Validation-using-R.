library(readr)
Credit <- read_csv("Credit.csv")
View(Credit)
library(leaps)
data1=read.csv("Credit.csv", header = TRUE)
attach(data1)
regfit=regsubsets(Balance~.,data = data1, nvmax = 10)
summary(regfit)
which.max(summary(regfit)$adjr2)
par(mfrow=c(2,2))
plot(regfit, scale = "adjr2")
plot(regfit, scale = "Cp")
plot(regfit, scale = "bic")
coef(regfit,6)
coef(regfit,7)
coef(regfit,4)
library(MASS)
regfit2= regsubsets(Balance~., data=data1, nvmax=10, method="forward")
summary(regfit2)
par(mfrow=c(2,2))
plot(regfit2, scale="adjr2")
plot(regfit2, scale="Cp")
plot(regfit2, scale="bic")
coef(regfit2,6)
coef(regfit2,5)
coef(regfit2,7)
set.seed(2)
train=sample(400, 200)
model=lm(Balance ~ Income + Limit + Cards + Student, data=data1, subset=train)
predict(model, data=data1)
#Balance-predict(model, data=data1)
mean((Balance-predict(model,data1))[-train]^2)
library(boot)
model2=glm(Balance ~ Income + Limit + Cards + Student, data=data1)
model13=lm(Balance ~ Income + Limit + Cards + Student, data=data1)
cv.err=cv.glm(data1, model2)
cv.err$delta
model6=glm(Balance ~ Income + Limit + Cards + Student, data=data1)
summary(model6)
cv.err2=cv.glm(data1, model6, K=10)
cv.err2$delta
set.seed(3)
set.seed(1)
train=sample(c(TRUE,FALSE), nrow(Credit),rep=TRUE)
test=(!train)
regfit.best2=regsubsets(Balance~.,data=Credit[train,],nvmax=10)
test.mat=model.matrix(Balance~.,data=Credit[test,])
val.errors=rep(NA,10)
for(i in 1:10){
coefi=coef(regfit.best2,id=i)
pred=test.mat[,names(coefi)]%*%coefi
val.errors[i]=mean((Credit$Balance[test]-pred)^2)}
val.errors
plot(val.errors,xlab="Number of Variables",ylab="test MSE",type='l')
which.min(val.errors)
